
import streamlit as st

def run_page():
    st.header("1. Application Overview")
    st.markdown("""
    This Streamlit application provides an interactive demonstration and comparative analysis of **Property-Based Testing (PBT)** versus **Traditional Test-Driven Development (TDD)** for refining code generated by Large Language Models (LLMs).
    It serves as a tool to visualize the iterative refinement process and evaluate the effectiveness of each testing paradigm.

    ### Learning Goals:
    -   Understand the principles of Property-Based Testing (PBT) and how it differs from Traditional Test-Driven Development (TDD).
    -   Learn how PBT improves the iterative refinement of code generated by Large Language Models (LLMs) compared to TDD.
    -   Explore the HumanEval dataset as a benchmark for code generation tasks.
    -   Implement the PGS framework involving two LLM-powered agents: Generator (code synthesis/refinement) and Tester (property validation/input generation).
    -   Analyze and visualize how PBT-driven feedback leads to faster and more semantically accurate code refinement.
    -   Demonstrate PBT effectiveness through comparative evaluations with TDD over multiple iterations.
    """))
